openapi: 3.0.4
info:
  title: "Knowthenix-KBD ${VERSION_APP}"
  description: "Multilingual question-and-answer knowledge representation service"
  version: 1.0.0
servers:
  - url: http://localhost:8080/v1   # URL для запуска из docker контейнера или локально
tags:
  - name: translation
    description: Перевод текста
paths:
  /translation/create:
    post:
      tags:
        - translation
      summary: Create translation
      operationId: translationCreate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationCreateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationCreateResponse'
  /translation/read:
    post:
      tags:
        - translation
      summary: Read translation
      operationId: translationRead
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationReadRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationReadResponse'
  /translation/update:
    post:
      tags:
        - translation
      summary: Update translation
      operationId: translationUpdate
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationUpdateRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationUpdateResponse'
  /translation/delete:
    post:
      tags:
        - translation
      summary: Delete translation
      operationId: translationDelete
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationDeleteRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationDeleteResponse'
  /translation/search:
    post:
      tags:
        - translation
      summary: Search translation
      operationId: translationSearch
      requestBody:
        description: Request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslationSearchRequest'
        required: true
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TranslationSearchResponse'

components:
  schemas:

    # ------- Общие типы -------
    UserId:
      type: string
      description: Идентификатор пользователя
    TranslationId:
      type: string
      description: Идентификатор перевода
    TranslationLock:
      type: string
      description: Версия оптимистичной блокировки перевода
    TranslationVisibility:
      type: string
      description: 'Тип видимости перевода для пользователей. Возможные значения: видит только автор, только группа, только зарегистрированный в системе пользователь, видимо всем'
      enum:
        - authorOnly
        - groupOnly
        - registeredOnly
        - public
    TranslationSyntax:
      type: string
      description: синтаксис формата текста перевода
      enum:
        - plainText
        - markdown
        - html
    TranslationState:
      type: string
      description: состояние перевода
      enum:
        - editable
        - nonEditable

    BaseTranslation:
      type: object
      description: Объект описывает свойства, одинаковые для запросов create и update, а также ответов
      properties:
        language:
          type: string
          description: язык перевода
        formatSyntax:
          $ref: '#/components/schemas/TranslationSyntax'
        content:
          type: string
          description: текст перевода
        state:
          $ref: '#/components/schemas/TranslationState'
        visibility:
          $ref: '#/components/schemas/TranslationVisibility'

    # ------- Типы для запросов -------
    IRequest:
      type: object
      description: Базовый класс или интерфейс для всех запросов
      properties:
        requestType:
          type: string
          description: Поле-дискриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
      discriminator:
        propertyName: requestType
        mapping:
          create: '#/components/schemas/TranslationCreateRequest'
          read: '#/components/schemas/TranslationReadRequest'
          update: '#/components/schemas/TranslationUpdateRequest'
          delete: '#/components/schemas/TranslationDeleteRequest'
          search: '#/components/schemas/TranslationSearchRequest'

    TranslationCreateObject:
      allOf:
        - $ref: '#/components/schemas/BaseTranslation'

    TranslationCreateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/TranslationRequestDebug'
        - type: object
          properties:
            translation:
              $ref: '#/components/schemas/TranslationCreateObject'

    TranslationReadObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/TranslationId'

    TranslationReadRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/TranslationRequestDebug'
        - type: object
          properties:
            translation:
              $ref: '#/components/schemas/TranslationReadObject'

    TranslationUpdateObject:
      allOf:
        - $ref: '#/components/schemas/BaseTranslation'
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/TranslationId'
            lock:
              $ref: '#/components/schemas/TranslationLock'

    TranslationUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/TranslationRequestDebug'
        - type: object
          properties:
            translation:
              $ref: '#/components/schemas/TranslationUpdateObject'

    TranslationDeleteObject:
      allOf:
        - type: object
          properties:
            id:
              $ref: '#/components/schemas/TranslationId'
            lock:
              $ref: '#/components/schemas/TranslationLock'

    TranslationDeleteRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/TranslationRequestDebug'
        - type: object
          properties:
            translation:
              $ref: '#/components/schemas/TranslationDeleteObject'

    TranslationSearchFilter:
      type: object
      description: Набор фильтров для поиска
      properties:
        searchString:
          type: string
          description: Поисковая строка, которая будет искаться в переводах

    TranslationSearchRequest:
      allOf:
        - $ref: '#/components/schemas/IRequest'
        - $ref: '#/components/schemas/TranslationRequestDebug'
        - type: object
          properties:
            translationFilter:
              $ref: '#/components/schemas/TranslationSearchFilter'

    # ------- Типы для ответов -------
    Error:
      type: object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    ResponseResult:
      type: string
      enum:
        - success
        - error

    IResponse:
      type: object
      description: Базовый класс или интерфейс для всех ответов
      properties:
        responseType:
          type: string
          description: Поле-дискриминатор для вычисления типа запроса
          example: create
        requestId:
          type: string
          description: Идентификатор запроса для отладки
        result:
          $ref: '#/components/schemas/ResponseResult'
          description: Поле описывает является ли результат успешным или ошибкой
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
      discriminator:
        propertyName: responseType
        mapping:
          create: '#/components/schemas/TranslationCreateResponse'
          read: '#/components/schemas/TranslationReadResponse'
          update: '#/components/schemas/TranslationUpdateResponse'
          delete: '#/components/schemas/TranslationDeleteResponse'
          search: '#/components/schemas/TranslationSearchResponse'

    # TranslationInitResponse потребуется на асинхронном транспорте
    TranslationInitResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'

    TranslationPermissions:
      type: string
      description: Доступы для клиента для операций над переводами
      enum:
        - read
        - update
        - delete
        - makeVisibleAuthor
        - makeVisibleGroup
        - makeVisibleRegistered
        - makeVisiblePublic

    TranslationResponseObject:
      allOf:
        - $ref: '#/components/schemas/BaseTranslation'
        - type: object
          description: Объект перевода возвращаемый в ответе бэкенда
          properties:
            id:
              $ref: '#/components/schemas/TranslationId'
            ownerId:
              $ref: '#/components/schemas/UserId'
            lock:
              $ref: '#/components/schemas/TranslationLock'
            permissions:
              type: array
              uniqueItems: true
              items:
                $ref: '#/components/schemas/TranslationPermissions'

    TranslationResponseSingle:
      allOf:
        - type: object
          description: Ответ с одним объектом перевода
          properties:
            translation:
              $ref: '#/components/schemas/TranslationResponseObject'

    TranslationResponseMulti:
      allOf:
        - type: object
          description: Ответ со списком объектов перевода
          properties:
            translations:
              type: array
              items:
                $ref: '#/components/schemas/TranslationResponseObject'

    TranslationCreateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/TranslationResponseSingle'

    TranslationReadResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/TranslationResponseSingle'

    TranslationUpdateResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/TranslationResponseSingle'

    TranslationDeleteResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/TranslationResponseSingle'

    TranslationSearchResponse:
      allOf:
        - $ref: '#/components/schemas/IResponse'
        - $ref: '#/components/schemas/TranslationResponseMulti'

    # ------- Стабы -------
    TranslationRequestDebugMode:
      type: string
      enum:
        - prod
        - test
        - stub

    TranslationRequestDebugStubs:
      type: string
      description: Перечисление всех стабов
      enum:
        - success
        - notFound
        - badId
        - badLanguage
        - badFormatSyntax
        - badContent
        - badState
        - badVisibility
        - cannotDelete
        - badSearchString

    TranslationDebug:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/TranslationRequestDebugMode'
        stub:
          $ref: '#/components/schemas/TranslationRequestDebugStubs'

    TranslationRequestDebug:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/TranslationDebug'